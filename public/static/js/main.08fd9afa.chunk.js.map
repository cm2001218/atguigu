{"version":3,"sources":["api/ajax.js","api/index.js","utils/memoryUtils.js","utils/storageUtils.js","pages/login/Login.js","config/menuConfig.js","components/left-nav/index.js","utils/dateUtils.js","components/link-button/index.js","components/header/index.js","pages/home/home.js","pages/category/add-form.jsx","pages/category/update-form.jsx","pages/category/category.js","utils/constants.js","pages/product/home.js","pages/product/pictures-wall.js","pages/product/rich-text-editor.js","pages/product/add-update.js","pages/product/detail.js","pages/product/product.js","pages/role/add-form.js","pages/role/auth-form.js","pages/role/role.js","pages/user/user-form.js","pages/user/user.js","pages/charts/bar.jsx","pages/charts/line.jsx","pages/charts/pie.jsx","pages/not-found/not-found.js","pages/admin/Admin.js","App.js","index.js","assets/images/logo.png"],"names":["ajax","url","data","arguments","length","undefined","type","Promise","resolve","reject","axios","get","params","post","then","res","catch","error","message","reqLogin","username","password","reqCategorys","parentId","reqCategory","categoryId","reqAddCategory","_ref","categoryName","reqUpdateCategory","_ref2","reqProducts","pageNum","pageSize","reqSearchProducts","searchName","searchType","Object","defineProperty","reqUpdateStatus","productId","status","reqAddOrUpdateProduct","product","_id","reqDeleteImg","name","reqRoles","reqAddRole","roleName","reqUpdateRole","role","reqUsers","reqDeleteUser","userId","reqAddOrUpdateUser","user","reqDeleteRole","roleId","reqDeleteProduct","reqDeleteCategory","reqWeather","city","concat","jsonp","err","_data$results$0$weath","results","weather_data","dayPictureUrl","weather","memoryUtils","storageUtils","saveUser","store","set","getUser","removeUser","remove","Item","es_form","config","top","duration","maxCount","Login","handleSubmit","event","preventDefault","_this","props","form","validateFields","asyncToGenerator","regenerator_default","a","mark","_callee","values","result","wrap","_context","prev","next","sent","history","replace","msg","console","log","stop","_x","_x2","apply","this","validatePwd","rule","value","callback","test","react_default","createElement","react_router","to","getFieldDecorator","className","src","logo","alt","onSubmit","rules","required","whitespace","min","max","pattern","initialValue","input","prefix","icon","style","color","placeholder","validator","es_button","htmlType","Component","WrapLogin","create","menuList","title","key","isPublic","children","SubMenu","menu","LeftNav","getMenu","path","location","pathname","map","item","find","cItem","indexOf","openKey","react_router_dom","menuNodes","mode","theme","selectedKeys","defaultOpenKeys","withRouter","formateDate","time","date","Date","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","LinkButton","assign","Header","state","currentTime","now","logout","modal","confirm","content","onOk","getTitle","menulist","forEach","getTime","intervalId","setInterval","setState","getWeather","_yield$reqWeather","clearInterval","onClick","Home","Option","es_select","AddForm","setForm","_this$props","categorys","add_form_Item","c","add_form","UpdateForm","update_form_Item","update_form","Category","loading","subCategorys","parentName","showStatus","initColumns","columns","dataIndex","width","render","category","showUpdate","showSubCategorys","deleteCategory","getCategorys","showCategorys","_onOk","_callee2","_context2","success","showAdd","addCategory","_callee3","_context3","resetFields","_x3","updateCategory","_ref3","_callee4","_context4","_x4","_x5","handleCancel","_this2","_this3","_this$state","marginRight","extra","card","table","bordered","rowKey","dataSource","pagination","defaultPageSize","showQuickJumper","visible","onCancel","PAGE_SIZE","BASE_IMG_URL","ProductHome","total","products","price","newStatus","updateStatus","textAlign","push","deleteProduct","getProducts","_result$data","list","_this$state2","onChange","home_Option","margin","target","current","PicturesWall","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","previewVisible","previewImage","fileList","getImgs","file","handlePreview","thumbUrl","handleChange","response","imgs","img","index","uid","uploadButton","upload","action","accept","listType","onPreview","footer","React","RichTextEditor","editorState","EditorState","createEmpty","onEditorStateChange","getDetail","draftToHtml","convertToRaw","getCurrentContent","uploadImageCallBack","xhr","XMLHttpRequest","open","FormData","append","send","addEventListener","JSON","parse","responseText","link","html","detail","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","createWithContent","react_draft_wysiwyg","editorStyle","border","minHeight","paddingLeft","toolbar","image","uploadCallback","present","mandatory","TextArea","ProductAddUpdate","options","initOptions","_assertThisInitialize","isUpdate","pCategoryId","childOptions","label","isLeaf","assertThisInitialized","option","abrupt","validatePrice","loadData","selectedOptions","targetOption","toConsumableArray","submit","_ref4","desc","categoryIds","pw","editor","createRef","formItemLayout","labelCol","span","wrapperCol","goBack","fontSize","add_update_Item","autosize","minRows","maxRows","addonAfter","cascader","pictures_wall_PicturesWall","ref","rich_text_editor_RichTextEditor","add_update","es_list","ProductDetail","cName1","cName2","all","_this$props$location$2","detail_Item","dangerouslySetInnerHTML","__html","Product","component","exact","role_add_form_Item","role_add_form","TreeNode","AuthForm","getMenus","checkedKeys","getTreeNodes","tree","onCheck","menus","treeNodes","nextProps","auth_form_Item","disabled","es_tree","checkable","defaultExpandAll","PureComponent","Role","roles","isShowAdd","isShowAuth","initColumn","deleteRole","getRoles","onRow","addRole","updateRole","auth","auth_time","auth_name","role_id","rowSelection","selectedRowKeys","onSelect","auth_form_AuthForm","UserForm","user_form_Item","phone","email","user_form_Option","user_form","User","users","isShow","roleNames","deleteUser","initRoleNames","reduce","pre","getUsers","addOrUpdateUser","getFieldsValue","Bar","sales","stores","update","sale","getOption","text","tooltip","legend","xAxis","yAxis","series","lib_default","Line","Pie","subtext","x","trigger","formatter","orient","left","radius","center","itemStyle","emphasis","shadowBlur","shadowOffsetX","shadowColor","getOption2","backgroundColor","textStyle","visualMap","show","inRange","colorLightness","sort","b","roseType","normal","labelLine","lineStyle","smooth","length2","animationType","animationEasing","animationDelay","idx","Math","random","height","NotFound","row","col","Footer","Sider","Content","Admin","layout","components_left_nav","components_header","from","App","ReactDOM","App_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.08fd9afa.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { message } from \"antd\";\r\n\r\nexport default function ajax(url, data = {}, type = \"GET\") {\r\n  return new Promise((resolve, reject) => {\r\n    let promise;\r\n    if (type === \"GET\") {\r\n      promise = axios.get(url, {\r\n        params: data,\r\n      });\r\n    } else {\r\n      promise = axios.post(url, data);\r\n    }\r\n    promise\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((error) => {\r\n        message.error(\"request error\" + error.message);\r\n      });\r\n  });\r\n}\r\n","import ajax from \"./ajax\";\r\nimport { message } from \"antd\";\r\nimport jsonp from \"jsonp\";\r\n\r\n// const BASE = \"http://localhost:5000\";\r\nconst BASE = \"\";\r\n\r\nexport const reqLogin = (username, password) => ajax(BASE + \"/login\", { username, password }, \"POST\");\r\n\r\nexport const reqAddUser = (user) => ajax(BASE + \"/manage/user/add\", user, \"POST\");\r\n\r\n/* get categorys/subCategorys */\r\nexport const reqCategorys = (parentId) => ajax(BASE + \"/manage/category/list\", { parentId });\r\n\r\nexport const reqCategory = (categoryId) => ajax(BASE + \"/manage/category/info\", { categoryId });\r\n\r\n/* add category */\r\nexport const reqAddCategory = ({ parentId, categoryName }) => ajax(BASE + \"/manage/category/add\", { parentId, categoryName }, \"POST\");\r\n\r\n/* update category */\r\nexport const reqUpdateCategory = ({ categoryId, categoryName }) => ajax(BASE + \"/manage/category/update\", { categoryId, categoryName }, \"POST\");\r\n\r\nexport const reqProducts = (pageNum, pageSize) => ajax(BASE + \"/manage/product/list\", { pageNum, pageSize });\r\n\r\nexport const reqSearchProducts = (pageNum, pageSize, searchName, searchType) => ajax(BASE + \"manage/product/search\", { pageNum, pageSize, [searchType]: searchName });\r\n\r\nexport const reqUpdateStatus = (productId, status) => ajax(BASE + \"/manage/product/updateStatus\", { productId, status }, \"POST\");\r\n\r\nexport const reqAddOrUpdateProduct = (product) => ajax(BASE + \"/manage/product/\" + (product._id ? \"update\" : \"add\"), product, \"POST\");\r\n\r\n// 删除指定名称的图片\r\nexport const reqDeleteImg = (name) => ajax(BASE + \"/manage/img/delete\", { name }, \"POST\");\r\n\r\n// 获取所有角色的列表\r\nexport const reqRoles = () => ajax(BASE + \"/manage/role/list\");\r\n// 添加角色\r\nexport const reqAddRole = (roleName) => ajax(BASE + \"/manage/role/add\", { roleName }, \"POST\");\r\n// 添加角色\r\nexport const reqUpdateRole = (role) => ajax(BASE + \"/manage/role/update\", role, \"POST\");\r\n\r\n// 获取所有用户的列表\r\nexport const reqUsers = () => ajax(BASE + \"/manage/user/list\");\r\n// 删除指定用户\r\nexport const reqDeleteUser = (userId) => ajax(BASE + \"/manage/user/delete\", { userId }, \"POST\");\r\n// 添加/更新用户\r\nexport const reqAddOrUpdateUser = (user) => ajax(BASE + \"/manage/user/\" + (user._id ? \"update\" : \"add\"), user, \"POST\");\r\n\r\n// 删除指role\r\nexport const reqDeleteRole = (roleId) => ajax(BASE + \"/manage/role/delete\", { roleId }, \"POST\");\r\n\r\n// 删除指product\r\nexport const reqDeleteProduct = (productId) => ajax(BASE + \"/manage/product/delete\", { productId }, \"POST\");\r\n\r\n// 删除指category\r\nexport const reqDeleteCategory = (categoryId, parentId) => ajax(BASE + \"/manage/category/delete\", { categoryId, parentId }, \"POST\");\r\n\r\nexport const reqWeather = (city) => {\r\n  return new Promise((resolve, reject) => {\r\n    const url = `http://api.map.baidu.com/telematics/v3/weather?location=${city}&output=json&ak=3p49MVra6urFRGOT9s8UBWr2`;\r\n    // 发送jsonp请求\r\n    jsonp(url, {}, (err, data) => {\r\n      // console.log(\"jsonp()\", err, data);\r\n      // 如果成功了\r\n      if (!err && data.status === \"success\") {\r\n        // 取出需要的数据\r\n        const { dayPictureUrl, weather } = data.results[0].weather_data[0];\r\n        resolve({ dayPictureUrl, weather });\r\n      } else {\r\n        // 如果失败了\r\n        message.error(\"获取天气信息失败!\");\r\n      }\r\n    });\r\n  });\r\n};\r\n","export default {\r\n  user: {},\r\n};\r\n","/*\r\n进行local数据存储管理的工具模块\r\n */\r\nimport store from \"store\";\r\nconst USER_KEY = \"user_key\";\r\nexport default {\r\n  /*\r\n  保存user\r\n   */\r\n  saveUser(user) {\r\n    // localStorage.setItem(USER_KEY, JSON.stringify(user))\r\n    store.set(USER_KEY, user);\r\n  },\r\n\r\n  /*\r\n  读取user\r\n   */\r\n  getUser() {\r\n    // return JSON.parse(localStorage.getItem(USER_KEY) || '{}')\r\n    return store.get(USER_KEY) || {};\r\n  },\r\n\r\n  /*\r\n  删除user\r\n   */\r\n  removeUser() {\r\n    // localStorage.removeItem(USER_KEY)\r\n    store.remove(USER_KEY);\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./login.less\";\r\nimport logo from \"../../assets/images/logo.png\";\r\nimport { Form, Icon, Input, Button, message } from \"antd\";\r\nimport { reqLogin } from \"../../api\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Item = Form.Item;\r\n\r\nmessage.config({\r\n  top: 245,\r\n  duration: 1,\r\n  maxCount: 3,\r\n});\r\n\r\nclass Login extends Component {\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        const { username, password } = values;\r\n        const result = await reqLogin(username, password);\r\n        if (result.status === 0) {\r\n          // message.success(\"Login successfully!\");\r\n          const user = result.data;\r\n          memoryUtils.user = user;\r\n          storageUtils.saveUser(user);\r\n          this.props.history.replace(\"/\");\r\n        } else {\r\n          message.error(result.msg);\r\n        }\r\n      } else {\r\n        console.log(\"fail validate\");\r\n      }\r\n    });\r\n  };\r\n\r\n  validatePwd = (rule, value, callback) => {\r\n    if (!value) {\r\n      callback(\"Please enter password\");\r\n    } else if (value.length < 4) {\r\n      callback(\"password must be more than 4 letters\");\r\n    } else if (value.length > 12) {\r\n      callback(\"password must be less than 12 letters\");\r\n    } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\r\n      callback(\"password must be letter,number or underline\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n  render() {\r\n    if (memoryUtils.user && memoryUtils.user._id) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    const form = this.props.form;\r\n    const { getFieldDecorator } = form;\r\n\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"login-header\">\r\n          <img src={logo} alt=\"logo\" />\r\n          <h1>Backend Admin System</h1>\r\n        </div>\r\n        <section className=\"login-content\">\r\n          <h2>User Login</h2>\r\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n            <Item>\r\n              {/*\r\n              用户名/密码的的合法性要求\r\n                1). 必须输入\r\n                2). 必须大于等于4位\r\n                3). 必须小于等于12位\r\n                4). 必须是英文、数字或下划线组成\r\n               */}\r\n              {getFieldDecorator(\"username\", {\r\n                // 配置对象: 属性名是特定的一些名称\r\n                // 声明式验证: 直接使用别人定义好的验证规则进行验证\r\n                rules: [\r\n                  { required: true, whitespace: true, message: \"please enter username\" },\r\n                  { min: 4, message: \"username must be at least 4 letters\" },\r\n                  { max: 12, message: \"username must be at least 12 letters\" },\r\n                  { pattern: /^[a-zA-Z0-9_]+$/, message: \"username must be letter,number or underline\" },\r\n                ],\r\n                initialValue: \"\", // 初始值\r\n              })(<Input prefix={<Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />} placeholder=\"username\" />)}\r\n            </Item>\r\n            <Form.Item>\r\n              {getFieldDecorator(\"password\", {\r\n                rules: [\r\n                  {\r\n                    validator: this.validatePwd,\r\n                  },\r\n                ],\r\n              })(<Input prefix={<Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />} type=\"password\" placeholder=\"password\" />)}\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                Login\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrapLogin = Form.create()(Login);\r\nexport default WrapLogin;\r\n","const menuList = [\r\n  {\r\n    title: \"Home\", // 菜单标题名称\r\n    key: \"/home\", // 对应的path\r\n    icon: \"home\", // 图标名称\r\n    isPublic: true, // 公开的\r\n  },\r\n  {\r\n    title: \"Product\",\r\n    key: \"/products\",\r\n    icon: \"appstore\",\r\n    children: [\r\n      // 子菜单列表\r\n      {\r\n        title: \"Category Admin\",\r\n        key: \"/category\",\r\n        icon: \"bars\",\r\n      },\r\n      {\r\n        title: \"Product Admin\",\r\n        key: \"/product\",\r\n        icon: \"tool\",\r\n      },\r\n    ],\r\n  },\r\n\r\n  {\r\n    title: \"User Admin\",\r\n    key: \"/user\",\r\n    icon: \"user\",\r\n  },\r\n  {\r\n    title: \"Role Admin\",\r\n    key: \"/role\",\r\n    icon: \"safety\",\r\n  },\r\n\r\n  // {\r\n  //   title: \"图形图表\",\r\n  //   key: \"/charts\",\r\n  //   icon: \"area-chart\",\r\n  //   children: [\r\n  //     {\r\n  //       title: \"柱形图\",\r\n  //       key: \"/charts/bar\",\r\n  //       icon: \"bar-chart\",\r\n  //     },\r\n  //     {\r\n  //       title: \"折线图\",\r\n  //       key: \"/charts/line\",\r\n  //       icon: \"line-chart\",\r\n  //     },\r\n  //     {\r\n  //       title: \"饼图\",\r\n  //       key: \"/charts/pie\",\r\n  //       icon: \"pie-chart\",\r\n  //     },\r\n  //   ],\r\n  // },\r\n\r\n  // {\r\n  //   title: \"订单管理\",\r\n  //   key: \"/order\",\r\n  //   icon: \"windows\",\r\n  // },\r\n];\r\n\r\nexport default menuList;\r\n","import React, { Component } from \"react\";\r\nimport \"./index.less\";\r\n\r\nimport menuList from \"../../config/menuConfig\";\r\nimport { Menu, Icon } from \"antd\";\r\nimport logo from \"../../assets/images/logo.png\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nclass LeftNav extends Component {\r\n  getMenu = (menuList) => {\r\n    const path = this.props.location.pathname;\r\n\r\n    return menuList.map((item) => {\r\n      if (!item.children) {\r\n        return (\r\n          <Menu.Item key={item.key}>\r\n            <Link to={item.key}>\r\n              <Icon type={item.icon} />\r\n              <span>{item.title}</span>\r\n            </Link>\r\n          </Menu.Item>\r\n        );\r\n      } else {\r\n        // debugger;\r\n        const cItem = item.children.find((cItem) => path.indexOf(cItem.key) === 0);\r\n        if (cItem) {\r\n          this.openKey = item.key;\r\n        }\r\n        return (\r\n          <SubMenu\r\n            key={item.key}\r\n            title={\r\n              <span>\r\n                <Icon type={item.icon} />\r\n                <span>{item.title}</span>\r\n              </span>\r\n            }>\r\n            {this.getMenu(item.children)}\r\n          </SubMenu>\r\n        );\r\n      }\r\n    });\r\n  };\r\n  componentWillMount() {\r\n    this.menuNodes = this.getMenu(menuList);\r\n  }\r\n  render() {\r\n    // debugger;\r\n    let path = this.props.location.pathname;\r\n\r\n    if (path.indexOf(\"/product\") === 0) {\r\n      // 当前请求的是商品或其子路由界面\r\n      path = \"/product\";\r\n    }\r\n    const openKey = this.openKey;\r\n    return (\r\n      <div className=\"left-nav\">\r\n        <Link to=\"/\" className=\"left-nav-header\">\r\n          <img src={logo} alt=\"logo\" />\r\n          <h1>Admin Platform</h1>\r\n        </Link>\r\n        <Menu mode=\"inline\" theme=\"dark\" selectedKeys={[path]} defaultOpenKeys={[openKey]}>\r\n          {this.menuNodes}\r\n          {/* <Menu.Item key=\"1\">\r\n            <Link to=\"/home\">\r\n              <Icon type=\"pie-chart\" />\r\n              <span>Home</span>\r\n            </Link>\r\n          </Menu.Item>\r\n\r\n          <SubMenu\r\n            key=\"sub1\"\r\n            title={\r\n              <span>\r\n                <Icon type=\"mail\" />\r\n                <span>Products</span>\r\n              </span>\r\n            }>\r\n            <Menu.Item key=\"2\">\r\n              <Link to=\"/category\">\r\n                <Icon type=\"mail\" />\r\n                <span>Category Admin</span>\r\n              </Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"3\">\r\n              <Link to=\"/product\">\r\n                <Icon type=\"mail\" />\r\n                <span>Product Admin</span>\r\n              </Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n          <Menu.Item key=\"4\">\r\n            <Link to=\"/user\">\r\n              <Icon type=\"pie-chart\" />\r\n              <span>User Admin</span>\r\n            </Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"5\">\r\n            <Link to=\"/role\">\r\n              <Icon type=\"pie-chart\" />\r\n              <span>Role Admin</span>\r\n            </Link>\r\n          </Menu.Item> */}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(LeftNav);\r\n","/*\r\n包含n个日期时间处理的工具函数模块\r\n*/\r\n\r\n/*\r\n  格式化日期\r\n*/\r\nexport function formateDate(time) {\r\n  if (!time) return ''\r\n  let date = new Date(time)\r\n  return date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate()\r\n    + ' ' + date.getHours() + ':' + date.getMinutes() + ':' + date.getSeconds()\r\n}","import React from \"react\";\r\nimport \"./index.less\";\r\n\r\nexport default function LinkButton(props) {\r\n  return (\r\n    <button {...props} className=\"link-button\">\r\n      {/* {props.children} */}\r\n    </button>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { reqWeather } from \"../../api\";\r\nimport \"./index.less\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport menulist from \"../../config/menuConfig\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Modal } from \"antd\";\r\n// import moduleName from \"module\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport LinkButton from \"../link-button\";\r\n\r\nclass Header extends Component {\r\n  state = {\r\n    currentTime: formateDate(Date.now()),\r\n    dayPictureUrl: \"\",\r\n    weather: \"\",\r\n    // title: \"\",\r\n  };\r\n  logout = () => {\r\n    /* pop the modal */\r\n    Modal.confirm({\r\n      content: \"confirm to logout?\",\r\n      onOk: () => {\r\n        // console.log(this);\r\n        /* delete user in local and memory */\r\n        storageUtils.removeUser();\r\n        memoryUtils.user = {};\r\n        /* to login  */\r\n        this.props.history.replace(\"/login\");\r\n        // this.props.history.push(\"/login\"); //ok\r\n        // console.log(this.props.history.goBack());\r\n      },\r\n    });\r\n  };\r\n  getTitle = () => {\r\n    let title = \"\";\r\n    const path = this.props.location.pathname;\r\n    menulist.forEach((item) => {\r\n      if (item.key === path) {\r\n        title = item.title;\r\n      } else if (item.children) {\r\n        // const cItem = item.children.find((cItem) => cItem.key === path);\r\n        const cItem = item.children.find((cItem) => path.indexOf(cItem.key) === 0);\r\n        if (cItem) {\r\n          title = cItem.title;\r\n        }\r\n      }\r\n    });\r\n    // this.setState({ title });\r\n    return title;\r\n  };\r\n  getTime = () => {\r\n    this.intervalId = setInterval(() => {\r\n      const currentTime = formateDate(Date.now());\r\n      this.setState({\r\n        currentTime,\r\n      });\r\n    }, 1000);\r\n  };\r\n  getWeather = async () => {\r\n    const { dayPictureUrl, weather } = await reqWeather(\"广州\");\r\n    this.setState({\r\n      dayPictureUrl,\r\n      weather,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getTime();\r\n    this.getWeather();\r\n    this.user = storageUtils.getUser();\r\n  }\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalId);\r\n  }\r\n  render() {\r\n    const title = this.getTitle();\r\n    const user = this.user || {};\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"header-top\">\r\n          <span>Welcome,{user.username}</span>\r\n          <LinkButton onClick={this.logout}>Logout</LinkButton>\r\n          {/* <a href=\"javascript:\" onClick={this.logout}>\r\n            Logout\r\n          </a> */}\r\n        </div>\r\n        <div className=\"header-bottom\">\r\n          <div className=\"header-bottom-left\">{title}</div>\r\n          <div className=\"header-bottom-right\">\r\n            <span>{this.state.currentTime}</span>\r\n            {/* <img src={this.state.dayPictureUrl} alt=\"weather\" /> */}\r\n            {/* <span>{this.state.weather}</span> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React, { Component } from \"react\";\r\nimport \"./home.less\";\r\n\r\nexport default class Home extends Component {\r\n  render() {\r\n    return <div className=\"home\">Welcome to Admin Platform</div>;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Select, Input } from \"antd\";\r\n\r\nconst Item = Form.Item;\r\nconst Option = Select.Option;\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    categorys: PropTypes.array.isRequired, // 一级分类的数组\r\n    parentId: PropTypes.string.isRequired, // 父分类的ID\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.props.setForm(this.props.form);\r\n  }\r\n\r\n  render() {\r\n    const { categorys, parentId } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {getFieldDecorator(\"parentId\", {\r\n            initialValue: parentId,\r\n          })(\r\n            <Select>\r\n              <Option value=\"0\">First Level Category</Option>\r\n              {/* <Option value=\"0\">一级分类</Option> */}\r\n              {categorys.map((c) => (\r\n                <Option value={c._id}>{c.name}</Option>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </Item>\r\n\r\n        <Item>\r\n          {getFieldDecorator(\"categoryName\", {\r\n            initialValue: \"\",\r\n            rules: [{ required: true, message: \"Category name is required\" }],\r\n          })(<Input placeholder=\"Please enter category name\" />)}\r\n          {/* {getFieldDecorator(\"categoryName\", {\r\n            initialValue: \"\",\r\n            rules: [{ required: true, message: \"分类名称必须输入\" }],\r\n          })(<Input placeholder=\"请输入分类名称\" />)} */}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Input } from \"antd\";\r\n\r\nconst Item = Form.Item;\r\n\r\n/*\r\n更新分类的form组件\r\n */\r\nclass UpdateForm extends Component {\r\n  static propTypes = {\r\n    categoryName: PropTypes.string.isRequired,\r\n    setForm: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentWillMount() {\r\n    // 将form对象通过setForm()传递父组件\r\n    this.props.setForm(this.props.form);\r\n  }\r\n\r\n  render() {\r\n    const { categoryName } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <Form>\r\n        <Item>\r\n          {getFieldDecorator(\"categoryName\", {\r\n            initialValue: categoryName,\r\n            rules: [{ required: true, message: \"Category name is required\" }],\r\n          })(<Input placeholder=\"Please enter category name\" />)}\r\n          {/* {\r\n            getFieldDecorator('categoryName', {\r\n              initialValue: categoryName,\r\n              rules: [\r\n                {required: true, message: '分类名称必须输入'}\r\n              ]\r\n            })(\r\n              <Input placeholder='请输入分类名称'/>\r\n            )\r\n          } */}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(UpdateForm);\r\n","import React, { Component } from \"react\";\r\nimport { Card, Table, Button, Icon, message, Modal } from \"antd\";\r\n\r\nimport LinkButton from \"../../components/link-button\";\r\nimport { reqCategorys, reqUpdateCategory, reqAddCategory, reqDeleteCategory } from \"../../api\";\r\nimport AddForm from \"./add-form\";\r\nimport UpdateForm from \"./update-form\";\r\n\r\nexport default class Category extends Component {\r\n  state = {\r\n    loading: false,\r\n    categorys: [],\r\n    subCategorys: [],\r\n    parentId: \"0\",\r\n    parentName: \"\",\r\n    showStatus: 0,\r\n  };\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"Category Name\",\r\n        // title: \"分类的名称\",\r\n        dataIndex: \"name\", // 显示数据对应的属性名\r\n      },\r\n      {\r\n        title: \"Operation\",\r\n        // title: \"操作\",\r\n        width: 300,\r\n        render: (\r\n          category // 返回需要显示的界面标签\r\n        ) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(category)}>Modify Category</LinkButton>\r\n            {/* <LinkButton onClick={() => this.showUpdate(category)}>修改分类</LinkButton> */}\r\n            {this.state.parentId === \"0\" ? <LinkButton onClick={() => this.showSubCategorys(category)}>View SubCategory</LinkButton> : null}\r\n            {/* {this.state.parentId === \"0\" ? <LinkButton onClick={() => this.showSubCategorys(category)}>查看子分类</LinkButton> : null} */}\r\n            <LinkButton onClick={() => this.deleteCategory(category)}>delete</LinkButton>\r\n            {/* <LinkButton onClick={() => this.deleteCategory(category)}>删除分类</LinkButton> */}\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  };\r\n\r\n  getCategorys = async (parentId) => {\r\n    this.setState({ loading: true });\r\n    parentId = parentId || this.state.parentId;\r\n    const result = await reqCategorys(parentId);\r\n    this.setState({ loading: false });\r\n\r\n    if (result.status === 0) {\r\n      const categorys = result.data;\r\n      if (parentId === \"0\") {\r\n        this.setState({ categorys });\r\n        console.log(\"----\", this.state.categorys.length);\r\n      } else {\r\n        this.setState({ subCategorys: categorys });\r\n      }\r\n    } else {\r\n      message.error(\"fail to get categorys list\");\r\n    }\r\n  };\r\n\r\n  showSubCategorys(category) {\r\n    this.setState({ parentId: category._id, parentName: category.name }, () => {\r\n      // console.log(\"callback\");\r\n      this.getCategorys();\r\n    });\r\n  }\r\n\r\n  showCategorys = () => {\r\n    this.setState({\r\n      parentId: \"0\",\r\n      parentName: \"\",\r\n    });\r\n  };\r\n\r\n  /*\r\n  删除指定分类\r\n   */\r\n  deleteCategory = (category) => {\r\n    Modal.confirm({\r\n      title: `confirm to delete ${category.name}?`,\r\n      // title: `确认删除${category.name}吗?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteCategory(category._id, category.parentId);\r\n        if (result.status === 0) {\r\n          message.success(\"Delete category successfully!\");\r\n          this.getCategorys();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  showAdd = () => {\r\n    this.setState({\r\n      showStatus: 1,\r\n    });\r\n  };\r\n  addCategory = () => {\r\n    this.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        this.setState({\r\n          showStatus: 0,\r\n        });\r\n        const { parentId, categoryName } = values;\r\n        this.form.resetFields();\r\n        const result = await reqAddCategory({ parentId, categoryName });\r\n        /* below is diff from origin */\r\n        if (result.status === 0) {\r\n          // console.log(parentId);\r\n          this.getCategorys(parentId);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  showUpdate = (category) => {\r\n    this.category = category;\r\n    this.setState({\r\n      showStatus: 2,\r\n    });\r\n  };\r\n\r\n  updateCategory = () => {\r\n    this.form.validateFields(async (err, values) => {\r\n      // console.log(this.category);\r\n      // console.log(values);\r\n      if (!err) {\r\n        this.setState({\r\n          showStatus: 0,\r\n        });\r\n        const categoryId = this.category._id;\r\n        const categoryName = values.categoryName;\r\n\r\n        this.form.resetFields();\r\n\r\n        const result = await reqUpdateCategory({ categoryId, categoryName });\r\n        if (result.status === 0) {\r\n          // console.log(this.state.parentId);\r\n          this.getCategorys();\r\n        }\r\n      }\r\n    });\r\n  };\r\n  handleCancel = () => {\r\n    // console.log(\"handle\", this);\r\n    this.setState({\r\n      showStatus: 0,\r\n    });\r\n  };\r\n  componentWillMount() {\r\n    // console.log(\"will\", this);\r\n    this.initColumns();\r\n  }\r\n  componentDidMount() {\r\n    this.getCategorys();\r\n  }\r\n  render() {\r\n    const { categorys, subCategorys, parentId, parentName, loading, showStatus } = this.state;\r\n    // console.log(categorys);\r\n    // console.log(subCategorys);\r\n    const category = this.category || {}; // 如果还没有指定一个空对象\r\n\r\n    const title =\r\n      parentId === \"0\" ? (\r\n        /* \"一级分类列表\" */\r\n        \"First Level Category List\"\r\n      ) : (\r\n        <span>\r\n          <LinkButton onClick={this.showCategorys}>First Level Category List</LinkButton>\r\n          {/* <LinkButton onClick={this.showCategorys}>一级分类列表</LinkButton> */}\r\n          <Icon type=\"arrow-right\" style={{ marginRight: 5 }} />\r\n          <span style={{ color: \"#1da57a\" }}>{parentName}</span>\r\n        </span>\r\n      );\r\n    const extra = (\r\n      <Button type=\"primary\" onClick={this.showAdd}>\r\n        <Icon type=\"plus\" />\r\n        {/* 添加 */}Add\r\n      </Button>\r\n    );\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table bordered rowKey=\"_id\" loading={loading} dataSource={parentId === \"0\" ? categorys : subCategorys} columns={this.columns} pagination={{ defaultPageSize: 5, showQuickJumper: true }} />\r\n        <Modal title=\"Add Category\" visible={showStatus === 1} onOk={this.addCategory} onCancel={this.handleCancel} key=\"1\">\r\n          {/* <Modal title=\"添加分类\" visible={showStatus === 1} onOk={this.addCategory} onCancel={this.handleCancel} key=\"1\"> */}\r\n          <AddForm\r\n            categorys={categorys}\r\n            parentId={parentId}\r\n            setForm={(form) => {\r\n              this.form = form;\r\n            }}\r\n          />\r\n        </Modal>\r\n\r\n        <Modal title=\"Update Category\" visible={showStatus === 2} onOk={this.updateCategory} onCancel={this.handleCancel} key=\"2\">\r\n          {/* <Modal title=\"更新分类\" visible={showStatus === 2} onOk={this.updateCategory} onCancel={this.handleCancel} key=\"2\"> */}\r\n          <UpdateForm\r\n            categoryName={category.name}\r\n            setForm={(form) => {\r\n              this.form = form;\r\n            }}\r\n          />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","/*\r\n包含一些常量值的模块\r\n */\r\nexport const PAGE_SIZE = 3 // 每页显示的记录数\r\nexport const BASE_IMG_URL = 'http://localhost:5000/upload/' // 上传图片的基础路径","import React, { Component } from \"react\";\r\nimport { Card, Select, Input, Button, Modal, Icon, Table, message } from \"antd\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport { reqProducts, reqSearchProducts, reqUpdateStatus, reqDeleteProduct } from \"../../api\";\r\nimport { PAGE_SIZE } from \"../../utils/constants\";\r\n\r\nconst Option = Select.Option;\r\n\r\nexport default class ProductHome extends Component {\r\n  state = {\r\n    total: 0,\r\n    products: [],\r\n    loading: false,\r\n    searchName: \"\",\r\n    searchType: \"productName\",\r\n  };\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"Product Name\",\r\n        // title: \"商品名称\",\r\n        dataIndex: \"name\",\r\n      },\r\n      {\r\n        title: \"Product Description\",\r\n        // title: \"商品描述\",\r\n        dataIndex: \"desc\",\r\n      },\r\n      {\r\n        title: \"Price\",\r\n        // title: \"价格\",\r\n        dataIndex: \"price\",\r\n        render: (price) => \"$\" + price,\r\n      },\r\n      {\r\n        width: 100,\r\n        title: \"Status\",\r\n        // title: \"状态\",\r\n        // dataIndex: \"status\",\r\n        render: (product) => {\r\n          const { status, _id } = product;\r\n          const newStatus = status === 1 ? 2 : 1;\r\n          return (\r\n            <span>\r\n              <Button type=\"primary\" style={{ width: \"100%\" }} onClick={() => this.updateStatus(_id, newStatus)}>\r\n                {status === 1 ? \"Not To Sale\" : \"To Sale\"}\r\n                {/* {status === 1 ? \"下架\" : \"上架\"} */}\r\n              </Button>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <span>{status === 1 ? \"On Sale\" : \"Not on Sale\"}</span>\r\n                {/* <span>{status === 1 ? \"在售\" : \"已下架\"}</span> */}\r\n              </div>\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        width: 100,\r\n        title: \"Operation\",\r\n        // title: \"操作\",\r\n        // dataIndex: \"status\",\r\n        render: (product) => {\r\n          return (\r\n            <span>\r\n              <LinkButton\r\n                onClick={() => {\r\n                  this.props.history.push(\"/product/detail\", { product });\r\n                }}>\r\n                Details\r\n                {/* 详情 */}\r\n              </LinkButton>\r\n              <LinkButton\r\n                onClick={() => {\r\n                  this.props.history.push(\"/product/addupdate\", product);\r\n                }}>\r\n                Modify\r\n                {/* 修改 */}\r\n              </LinkButton>\r\n              <LinkButton onClick={() => this.deleteProduct(product)}>delete</LinkButton>\r\n              {/* <LinkButton onClick={() => this.deleteProduct(product)}>删除</LinkButton> */}\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n  };\r\n\r\n  /*\r\n  删除指定产品\r\n   */\r\n  deleteProduct = (product) => {\r\n    Modal.confirm({\r\n      title: `confirm to delete ${product.name}?`,\r\n      // title: `确认删除${product.name}吗?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteProduct(product._id);\r\n        if (result.status === 0) {\r\n          message.success(\"Delete Product successfully!\");\r\n          // message.success(\"删除产品成功!\");\r\n          this.getProducts(1);\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  getProducts = async (pageNum) => {\r\n    this.pageNum = pageNum;\r\n    this.setState({ loading: true });\r\n    const { searchName, searchType } = this.state;\r\n    let result = {};\r\n    console.log(searchName);\r\n    if (searchName) {\r\n      result = await reqSearchProducts(pageNum, PAGE_SIZE, searchName, searchType);\r\n      console.log(\"search\", result);\r\n    } else {\r\n      result = await reqProducts(pageNum, PAGE_SIZE);\r\n    }\r\n    this.setState({ loading: false });\r\n\r\n    // console.log(result);\r\n    if (result.status === 0) {\r\n      const { total, list } = result.data;\r\n      this.setState({\r\n        total,\r\n        products: list,\r\n      });\r\n    }\r\n  };\r\n  updateStatus = async (productId, status) => {\r\n    const result = await reqUpdateStatus(productId, status);\r\n    if (result.status === 0) {\r\n      message.success(\"update product successfully!\");\r\n      this.getProducts(this.pageNum);\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n  componentDidMount() {\r\n    this.getProducts(1);\r\n  }\r\n  render() {\r\n    const { products, total, loading, searchName, searchType } = this.state;\r\n    const title = (\r\n      <span>\r\n        <Select value={searchType} style={{ width: 150 }} onChange={(value) => this.setState({ searchType: value })}>\r\n          <Option value=\"productName\">Search On Name</Option>\r\n          {/* <Option value=\"1\">按名称搜索</Option> */}\r\n          <Option value=\"productDesc\">Search On Desc</Option>\r\n          {/* <Option value=\"2\">按描述搜索</Option> */}\r\n        </Select>\r\n        <Input placeholder=\"Keyword\" style={{ width: 150, margin: \"0 15px\" }} value={searchName} onChange={(event) => this.setState({ searchName: event.target.value })}></Input>\r\n        {/* <Input placeholder=\"请输入关键字\" style={{ width: 150, margin: \"0 15px\" }}></Input> */}\r\n        <Button type=\"primary\" onClick={() => this.getProducts(1)}>\r\n          Search\r\n        </Button>\r\n        {/* <Button type=\"primary\">搜索</Button> */}\r\n      </span>\r\n    );\r\n    const extra = (\r\n      <span>\r\n        <Button\r\n          type=\"primary\"\r\n          onClick={() => {\r\n            this.props.history.push(\"/product/addupdate\");\r\n          }}>\r\n          <Icon type=\"plus\"></Icon>Add Product\r\n          {/* <Icon type=\"plus\"></Icon>添加商品 */}\r\n        </Button>\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <Card title={title} extra={extra}>\r\n        <Table\r\n          bordered\r\n          loading={loading}\r\n          dataSource={products}\r\n          columns={this.columns}\r\n          rowKey=\"_id\"\r\n          pagination={{ current: this.pageNum, defaultPageSize: PAGE_SIZE, total, showQuickJumper: true, onChange: this.getProducts }}></Table>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Upload, Icon, Modal, message } from \"antd\";\r\n// import {reqDeleteImg} from '../../api'\r\nimport { BASE_IMG_URL } from \"../../utils/constants\";\r\nimport { reqDeleteImg } from \"../../api\";\r\n/*\r\n用于图片上传的组件\r\n */\r\nexport default class PicturesWall extends React.Component {\r\n  static propTypes = {\r\n    imgs: PropTypes.array,\r\n  };\r\n\r\n  state = {\r\n    previewVisible: false, // 标识是否显示大图预览Modal\r\n    previewImage: \"\", // 大图的url\r\n    fileList: [\r\n      /*{\r\n        uid: '-1', // 每个file都有自己唯一的id\r\n        name: 'xxx.png', // 图片文件名\r\n        status: 'done', // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: 'https://zos.alipayobjects.com/rmsportal/jkjgkEfvpUPVyRjUImniVslZfWPnJuuZ.png', // 图片地址\r\n      },*/\r\n    ],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    let fileList = [];\r\n\r\n    // 如果传入了imgs属性\r\n    const { imgs } = this.props;\r\n    if (imgs && imgs.length > 0) {\r\n      fileList = imgs.map((img, index) => ({\r\n        uid: -index, // 每个file都有自己唯一的id\r\n        name: img, // 图片文件名\r\n        status: \"done\", // 图片状态: done-已上传, uploading: 正在上传中, removed: 已删除\r\n        url: BASE_IMG_URL + img,\r\n      }));\r\n    }\r\n\r\n    // 初始化状态\r\n    this.state = {\r\n      previewVisible: false, // 标识是否显示大图预览Modal\r\n      previewImage: \"\", // 大图的url\r\n      fileList, // 所有已上传图片的数组\r\n    };\r\n  }\r\n\r\n  /*\r\n  获取所有已上传图片文件名的数组\r\n   */\r\n  getImgs = () => {\r\n    return this.state.fileList.map((file) => file.name);\r\n  };\r\n\r\n  /*\r\n  隐藏Modal\r\n   */\r\n  handleCancel = () => this.setState({ previewVisible: false });\r\n\r\n  handlePreview = (file) => {\r\n    console.log(\"handlePreview()\", file);\r\n    // 显示指定file对应的大图\r\n    this.setState({\r\n      previewImage: file.url || file.thumbUrl,\r\n      previewVisible: true,\r\n    });\r\n  };\r\n\r\n  /*\r\n  file: 当前操作的图片文件(上传/删除)\r\n  fileList: 所有已上传图片文件对象的数组\r\n   */\r\n  handleChange = async ({ file, fileList }) => {\r\n    console.log(\"handleChange()\", file.status, fileList.length, file === fileList[fileList.length - 1]);\r\n\r\n    // 一旦上传成功, 将当前上传的file的信息修正(name, url)\r\n    if (file.status === \"done\") {\r\n      const result = file.response; // {status: 0, data: {name: 'xxx.jpg', url: '图片地址'}}\r\n      if (result.status === 0) {\r\n        message.success(\"上传图片成功!\");\r\n        const { name, url } = result.data;\r\n        file = fileList[fileList.length - 1];\r\n        file.name = name;\r\n        file.url = url;\r\n      } else {\r\n        message.error(\"上传图片失败\");\r\n      }\r\n    } else if (file.status === \"removed\") {\r\n      console.log(file);\r\n      // 删除图片\r\n      const result = await reqDeleteImg(file.name);\r\n      if (result.status === 0) {\r\n        message.success(\"删除图片成功!\");\r\n      } else {\r\n        message.error(\"删除图片失败!\");\r\n      }\r\n    }\r\n\r\n    // 在操作(上传/删除)过程中更新fileList状态\r\n\r\n    this.setState({ fileList });\r\n  };\r\n\r\n  render() {\r\n    const { previewVisible, previewImage, fileList } = this.state;\r\n    const uploadButton = (\r\n      <div>\r\n        <Icon type=\"plus\" />\r\n        <div>Upload</div>\r\n      </div>\r\n    );\r\n    return (\r\n      <div>\r\n        <Upload\r\n          action=\"/manage/img/upload\" /*上传图片的接口地址*/\r\n          accept=\"image/*\" /*只接收图片格式*/\r\n          name=\"image\" /*请求参数名*/\r\n          listType=\"picture-card\" /*卡片样式*/\r\n          fileList={fileList} /*所有已上传图片文件对象的数组*/\r\n          onPreview={this.handlePreview}\r\n          onChange={this.handleChange}>\r\n          {fileList.length >= 4 ? null : uploadButton}\r\n        </Upload>\r\n\r\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\r\n          <img alt=\"example\" style={{ width: \"100%\" }} src={previewImage} />\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","/*\r\n用来指定商品详情的富文本编辑器组件\r\n */\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { EditorState, convertToRaw, ContentState } from \"draft-js\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport htmlToDraft from \"html-to-draftjs\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n\r\nexport default class RichTextEditor extends Component {\r\n  static propTypes = {\r\n    detail: PropTypes.string,\r\n  };\r\n\r\n  state = {\r\n    editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    const html = this.props.detail;\r\n    if (html) {\r\n      // 如果有值, 根据html格式字符串创建一个对应的编辑对象\r\n      const contentBlock = htmlToDraft(html);\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.state = {\r\n        editorState,\r\n      };\r\n    } else {\r\n      this.state = {\r\n        editorState: EditorState.createEmpty(), // 创建一个没有内容的编辑对象\r\n      };\r\n    }\r\n  }\r\n\r\n  /*\r\n  输入过程中实时的回调\r\n   */\r\n  onEditorStateChange = (editorState) => {\r\n    console.log(\"onEditorStateChange()\");\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  getDetail = () => {\r\n    // 返回输入数据对应的html格式的文本\r\n    return draftToHtml(convertToRaw(this.state.editorState.getCurrentContent()));\r\n  };\r\n\r\n  uploadImageCallBack = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open(\"POST\", \"/manage/img/upload\");\r\n      const data = new FormData();\r\n      data.append(\"image\", file);\r\n      xhr.send(data);\r\n      xhr.addEventListener(\"load\", () => {\r\n        const response = JSON.parse(xhr.responseText);\r\n        const url = response.data.url; // 得到图片的url\r\n        resolve({ data: { link: url } });\r\n      });\r\n      xhr.addEventListener(\"error\", () => {\r\n        const error = JSON.parse(xhr.responseText);\r\n        reject(error);\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <Editor\r\n        editorState={editorState}\r\n        editorStyle={{ border: \"1px solid black\", minHeight: 200, paddingLeft: 10 }}\r\n        onEditorStateChange={this.onEditorStateChange}\r\n        toolbar={{\r\n          image: { uploadCallback: this.uploadImageCallBack, alt: { present: true, mandatory: true } },\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Icon, Form, Input, Cascader, Button, message } from \"antd\";\r\n\r\nimport PicturesWall from \"./pictures-wall\";\r\nimport LinkButton from \"../../components/link-button\";\r\nimport { reqCategorys, reqAddOrUpdateProduct } from \"../../api\";\r\nimport RichTextEditor from \"./rich-text-editor.js\";\r\n\r\nconst { Item } = Form;\r\nconst { TextArea } = Input;\r\n\r\nclass ProductAddUpdate extends Component {\r\n  state = {\r\n    options: [],\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.pw = React.createRef();\r\n    this.editor = React.createRef();\r\n  }\r\n\r\n  initOptions = async (categorys) => {\r\n    // 根据categorys生成options数组\r\n    const options = categorys.map((c) => ({\r\n      value: c._id,\r\n      label: c.name,\r\n      isLeaf: false, // 不是叶子\r\n    }));\r\n\r\n    // 如果是一个二级分类商品的更新\r\n    const { isUpdate, product } = this;\r\n    const { pCategoryId } = product;\r\n    if (isUpdate && pCategoryId !== \"0\") {\r\n      // 获取对应的二级分类列表\r\n      const subCategorys = await this.getCategorys(pCategoryId);\r\n      // 生成二级下拉列表的options\r\n      const childOptions = subCategorys.map((c) => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }));\r\n\r\n      // 找到当前商品对应的一级option对象\r\n      const targetOption = options.find((option) => option.value === pCategoryId);\r\n\r\n      // 关联对应的一级option上\r\n      targetOption.children = childOptions;\r\n    }\r\n\r\n    // 更新options状态\r\n    this.setState({\r\n      options,\r\n    });\r\n  };\r\n\r\n  getCategorys = async (parentId) => {\r\n    const result = await reqCategorys(parentId);\r\n    if (result.status === 0) {\r\n      const categorys = result.data;\r\n      if (parentId === \"0\") {\r\n        this.initOptions(categorys);\r\n      } else {\r\n        return categorys;\r\n      }\r\n    }\r\n  };\r\n\r\n  validatePrice = (rule, value, callback) => {\r\n    if (value * 1 > 0) {\r\n      callback();\r\n    } else {\r\n      callback(\"price must be more than 0\");\r\n      // callback(\"价格必须大于0\");\r\n    }\r\n  };\r\n\r\n  loadData = async (selectedOptions) => {\r\n    const targetOption = selectedOptions[0];\r\n    targetOption.loading = true;\r\n    const subCategorys = await this.getCategorys(targetOption.value);\r\n    targetOption.loading = false;\r\n    if (subCategorys && subCategorys.length > 0) {\r\n      const childOptions = subCategorys.map((c) => ({\r\n        value: c._id,\r\n        label: c.name,\r\n        isLeaf: true,\r\n      }));\r\n      targetOption.children = childOptions;\r\n    } else {\r\n      targetOption.isLeaf = true;\r\n    }\r\n    this.setState({\r\n      options: [...this.state.options],\r\n    });\r\n  };\r\n\r\n  submit = () => {\r\n    this.props.form.validateFields(async (err, values) => {\r\n      if (!err) {\r\n        const { name, desc, price, categoryIds } = values;\r\n        let pCategoryId, categoryId;\r\n        if (categoryIds.length === 1) {\r\n          pCategoryId = \"0\";\r\n          categoryId = categoryIds[0];\r\n        } else {\r\n          pCategoryId = categoryIds[0];\r\n          categoryId = categoryIds[1];\r\n        }\r\n        const imgs = this.pw.current.getImgs();\r\n        const detail = this.editor.current.getDetail();\r\n        console.log(detail);\r\n\r\n        const product = { name, desc, price, imgs, detail, pCategoryId, categoryId };\r\n\r\n        if (this.isUpdate) {\r\n          product._id = this.product._id;\r\n        }\r\n        console.log(product);\r\n        const result = await reqAddOrUpdateProduct(product);\r\n        if (result.status === 0) {\r\n          message.success(`${this.isUpdate ? \"Update\" : \"Add\"}product sucessfully!`);\r\n          // message.success(`${this.isUpdate ? \"更新\" : \"添加\"}商品成功`);\r\n        } else {\r\n          message.success(`${this.isUpdate ? \"Update\" : \"Add\"}product failed`);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getCategorys(\"0\");\r\n  }\r\n  componentWillMount() {\r\n    const product = this.props.location.state;\r\n    this.isUpdate = !!product;\r\n    this.product = product || {};\r\n  }\r\n\r\n  render() {\r\n    const { isUpdate, product } = this;\r\n    const { pCategoryId, categoryId, imgs, detail } = product;\r\n    const categoryIds = [];\r\n    if (isUpdate) {\r\n      // 商品是一个一级分类的商品\r\n      if (pCategoryId === \"0\") {\r\n        categoryIds.push(categoryId);\r\n      } else {\r\n        // 商品是一个二级分类的商品\r\n        categoryIds.push(pCategoryId);\r\n        categoryIds.push(categoryId);\r\n      }\r\n    }\r\n    const formItemLayout = {\r\n      labelCol: { span: 2 }, // 左侧label的宽度\r\n      wrapperCol: { span: 8 }, // 右侧包裹的宽度\r\n    };\r\n\r\n    const title = (\r\n      <span>\r\n        <LinkButton\r\n          onClick={() => {\r\n            this.props.history.goBack();\r\n          }}>\r\n          <Icon type=\"arrow-left\" style={{ fontSize: 20 }}></Icon>\r\n        </LinkButton>\r\n        <span>{isUpdate ? \"Modify Product\" : \"Add Product\"}</span>\r\n        {/* <span>{isUpdate ? \"修改商品\" : \"添加商品\"}</span> */}\r\n      </span>\r\n    );\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Card title={title}>\r\n        <Form {...formItemLayout}>\r\n          <Item label=\"Name\">\r\n            {/* <Item label=\"商品名称\"> */}\r\n            {getFieldDecorator(\"name\", {\r\n              initialValue: product.name,\r\n              rules: [{ required: true, message: \"product name is required\" }],\r\n            })(<Input placeholder=\"Please enter product name\"></Input>)}\r\n            {/* {getFieldDecorator(\"name\", {\r\n              initialValue: product.name,\r\n              rules: [{ required: true, message: \"必须输入商品名称\" }],\r\n            })(<Input placeholder=\"请输入商品名称\"></Input>)} */}\r\n          </Item>\r\n          <Item label=\"Description\">\r\n            {/* <Item label=\"商品描述\"> */}\r\n            {getFieldDecorator(\"desc\", {\r\n              initialValue: product.desc,\r\n              rules: [{ required: true, message: \"product description is required\" }],\r\n            })(<TextArea placeholder=\"Please enter product description\" autosize={{ minRows: 2, maxRows: 6 }} />)}\r\n            {/* {getFieldDecorator(\"desc\", {\r\n              initialValue: product.desc,\r\n              rules: [{ required: true, message: \"必须输入商品描述\" }],\r\n            })(<TextArea placeholder=\"请输入商品描述\" autosize={{ minRows: 2, maxRows: 6 }} />)} */}\r\n          </Item>\r\n          <Item label=\"Price\">\r\n            {/* <Item label=\"商品价格\"> */}\r\n            {getFieldDecorator(\"price\", {\r\n              initialValue: product.price,\r\n              rules: [{ required: true, message: \"product price is required\" }, { validator: this.validatePrice }],\r\n            })(<Input type=\"number\" placeholder=\"Please enter product price\" addonAfter=\"Dollors\" />)}\r\n            {/* {getFieldDecorator(\"price\", {\r\n              initialValue: product.price,\r\n              rules: [{ required: true, message: \"必须输入商品价格\" }, { validator: this.validatePrice }],\r\n            })(<Input type=\"number\" placeholder=\"请输入商品价格\" addonAfter=\"元\" />)} */}\r\n          </Item>\r\n          <Item label=\"Category\">\r\n            {/* <Item label=\"商品分类\"> */}\r\n            {getFieldDecorator(\"categoryIds\", {\r\n              initialValue: categoryIds,\r\n              rules: [{ required: true, message: \"product category is required\" }],\r\n            })(\r\n              <Cascader placeholder=\"Please enter product category\" options={this.state.options} /*需要显示的列表数据数组*/ loadData={this.loadData} /*当选择某个列表项, 加载下一级列表的监听回调*/ />\r\n            )}\r\n          </Item>\r\n          <Item label=\"Images\">\r\n            {/* <Item label=\"商品图片\"> */}\r\n            <PicturesWall ref={this.pw} imgs={imgs} />\r\n          </Item>\r\n          <Item label=\"Details\" labelCol={{ span: 2 }} wrapperCol={{ span: 20 }}>\r\n            {/* <Item label=\"商品详情\" labelCol={{ span: 2 }} wrapperCol={{ span: 20 }}> */}\r\n            <RichTextEditor ref={this.editor} detail={detail} />\r\n          </Item>\r\n          <Item>\r\n            <Button type=\"primary\" onClick={this.submit}>\r\n              {/* 提交 */} Submit\r\n            </Button>\r\n          </Item>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(ProductAddUpdate);\r\n","import React, { Component } from \"react\";\r\nimport { Card, Icon, List } from \"antd\";\r\n\r\nimport LinkButton from \"../../components/link-button\";\r\nimport { BASE_IMG_URL } from \"../../utils/constants\";\r\nimport { reqCategory } from \"../../api\";\r\n\r\nconst Item = List.Item;\r\n\r\n/*\r\nProduct的详情子路由组件\r\n */\r\nexport default class ProductDetail extends Component {\r\n  state = {\r\n    cName1: \"\", // 一级分类名称\r\n    cName2: \"\", // 二级分类名称\r\n  };\r\n\r\n  async componentDidMount() {\r\n    // 得到当前商品的分类ID\r\n    const { pCategoryId, categoryId } = this.props.location.state.product;\r\n    if (pCategoryId === \"0\") {\r\n      // 一级分类下的商品\r\n      const result = await reqCategory(categoryId);\r\n      const cName1 = result.data.name;\r\n      this.setState({ cName1 });\r\n    } else {\r\n      // 二级分类下的商品\r\n      /*\r\n      //通过多个await方式发多个请求: 后面一个请求是在前一个请求成功返回之后才发送\r\n      const result1 = await reqCategory(pCategoryId) // 获取一级分类列表\r\n      const result2 = await reqCategory(categoryId) // 获取二级分类\r\n      const cName1 = result1.data.name\r\n      const cName2 = result2.data.name\r\n      */\r\n\r\n      // 一次性发送多个请求, 只有都成功了, 才正常处理\r\n      const results = await Promise.all([reqCategory(pCategoryId), reqCategory(categoryId)]);\r\n      const cName1 = results[0].data.name;\r\n      const cName2 = results[1].data.name;\r\n      this.setState({\r\n        cName1,\r\n        cName2,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    // 读取携带过来的state数据\r\n    const { name, desc, price, detail, imgs } = this.props.location.state.product;\r\n    const { cName1, cName2 } = this.state;\r\n\r\n    const title = (\r\n      <span>\r\n        <LinkButton>\r\n          <Icon type=\"arrow-left\" style={{ marginRight: 10, fontSize: 20 }} onClick={() => this.props.history.goBack()} />\r\n        </LinkButton>\r\n\r\n        <span>Product Details</span>\r\n        {/* <span>商品详情</span> */}\r\n      </span>\r\n    );\r\n    return (\r\n      <Card title={title} className=\"product-detail\">\r\n        <List>\r\n          <Item>\r\n            <span className=\"left\">Name</span>\r\n            {/* <span className=\"left\">商品名称:</span> */}\r\n            <span>{name}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">Description</span>\r\n            {/* <span className=\"left\">商品描述:</span> */}\r\n            <span>{desc}</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">Price</span>\r\n            {/* <span className=\"left\">商品价格:</span> */}\r\n            <span>{price}元</span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">Category</span>\r\n            {/* <span className=\"left\">所属分类:</span> */}\r\n            <span>\r\n              {cName1} {cName2 ? \" --> \" + cName2 : \"\"}\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">Images</span>\r\n            {/* <span className=\"left\">商品图片:</span> */}\r\n            <span>\r\n              {imgs.map((img) => (\r\n                <img key={img} src={BASE_IMG_URL + img} className=\"product-img\" alt=\"img\" />\r\n              ))}\r\n            </span>\r\n          </Item>\r\n          <Item>\r\n            <span className=\"left\">Details</span>\r\n            {/* <span className=\"left\">商品详情:</span> */}\r\n            <span dangerouslySetInnerHTML={{ __html: detail }}></span>\r\n          </Item>\r\n        </List>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport ProductHome from \"./home\";\r\nimport ProductAddUpdate from \"./add-update\";\r\nimport ProductDetail from \"./detail\";\r\n\r\nimport \"./product.less\";\r\n\r\n/*\r\n商品路由\r\n */\r\nexport default class Product extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/product\" component={ProductHome} exact /> {/*路径完全匹配*/}\r\n        <Route path=\"/product/addupdate\" component={ProductAddUpdate} />\r\n        <Route path=\"/product/detail\" component={ProductDetail} />\r\n        <Redirect to=\"/product\" />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Input } from \"antd\";\r\n\r\nconst Item = Form.Item;\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nclass AddForm extends Component {\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.props.setForm(this.props.form);\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout1 = {\r\n      labelCol: { span: 5 },\r\n      wrapperCol: { span: 15 },\r\n    };\r\n\r\n    return (\r\n      <Form>\r\n        <Item label=\"Role Name:\" {...formItemLayout1}>\r\n          {getFieldDecorator(\"roleName\", {\r\n            initialValue: \"\",\r\n            rules: [{ required: true, message: \"Role name is required\" }],\r\n          })(<Input placeholder=\"Please enter role name\" />)}\r\n        </Item>\r\n        {/* <Item label=\"角色名称\" {...formItemLayout1}>\r\n          {getFieldDecorator(\"roleName\", {\r\n            initialValue: \"\",\r\n            rules: [{ required: true, message: \"角色名称必须输入\" }],\r\n          })(<Input placeholder=\"请输入角色名称\" />)}\r\n        </Item> */}\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddForm);\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Input, Tree } from \"antd\";\r\nimport menuList from \"../../config/menuConfig\";\r\n\r\nconst Item = Form.Item;\r\n\r\nconst { TreeNode } = Tree;\r\n\r\n/*\r\n添加分类的form组件\r\n */\r\nexport default class AuthForm extends PureComponent {\r\n  static propTypes = {\r\n    role: PropTypes.object,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // 根据传入角色的menus生成初始状态\r\n    const { menus } = this.props.role;\r\n    this.state = {\r\n      checkedKeys: menus,\r\n    };\r\n  }\r\n\r\n  /*\r\n  为父组件提交获取最新menus数据的方法\r\n   */\r\n  getMenus = () => this.state.checkedKeys;\r\n\r\n  getTreeNodes = (menuList) => {\r\n    // return menuList.reduce((pre, item) => {\r\n    //   pre.push(\r\n    //     <TreeNode title={item.title} key={item.key}>\r\n    //       {item.children ? this.getTreeNodes(item.children) : null}\r\n    //     </TreeNode>\r\n    //   )\r\n    //   return pre\r\n    // }, [])\r\n    let tree = [];\r\n    menuList.forEach((item) => {\r\n      tree.push(\r\n        <TreeNode title={item.title} key={item.key}>\r\n          {item.children ? this.getTreeNodes(item.children) : null}\r\n        </TreeNode>\r\n      );\r\n    });\r\n    return tree;\r\n  };\r\n\r\n  // 选中某个node时的回调\r\n  onCheck = (checkedKeys) => {\r\n    console.log(\"onCheck\", checkedKeys);\r\n    this.setState({ checkedKeys });\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.treeNodes = this.getTreeNodes(menuList);\r\n  }\r\n\r\n  // 根据新传入的role来更新checkedKeys状态\r\n  /*\r\n  当组件接收到新的属性时自动调用\r\n   */\r\n  componentWillReceiveProps(nextProps) {\r\n    // console.log(\"componentWillReceiveProps()\", nextProps);\r\n    const menus = nextProps.role.menus;\r\n    this.setState({\r\n      checkedKeys: menus,\r\n    });\r\n    // this.state.checkedKeys = menus\r\n  }\r\n\r\n  render() {\r\n    // console.log(\"AuthForm render()\");\r\n    const { role } = this.props;\r\n    const { checkedKeys } = this.state;\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 }, // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Item label=\"Role Name\" {...formItemLayout}>\r\n          {/* <Item label=\"角色名称\" {...formItemLayout}> */}\r\n          <Input value={role.name} disabled />\r\n        </Item>\r\n\r\n        <Tree checkable defaultExpandAll={true} checkedKeys={checkedKeys} onCheck={this.onCheck}>\r\n          <TreeNode title=\"System Permission\" key=\"all\">\r\n            {/* <TreeNode title=\"平台权限\" key=\"all\"> */}\r\n            {this.treeNodes}\r\n          </TreeNode>\r\n        </Tree>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button, Table, Modal, message } from \"antd\";\r\nimport { PAGE_SIZE } from \"../../utils/constants\";\r\nimport { reqRoles, reqAddRole, reqUpdateRole, reqDeleteRole } from \"../../api\";\r\nimport AddForm from \"./add-form\";\r\nimport AuthForm from \"./auth-form\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\nimport LinkButton from \"../../components/link-button\";\r\n\r\n/*\r\n角色路由\r\n */\r\nexport default class Role extends Component {\r\n  state = {\r\n    roles: [], // 所有角色的列表\r\n    role: {}, // 选中的role\r\n    isShowAdd: false, // 是否显示添加界面\r\n    isShowAuth: false, // 是否显示设置权限界面\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.auth = React.createRef();\r\n  }\r\n\r\n  initColumn = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"Role\",\r\n        // title: \"角色名称\",\r\n        dataIndex: \"name\",\r\n      },\r\n      {\r\n        title: \"Create_Time\",\r\n        // title: \"创建时间\",\r\n        dataIndex: \"create_time\",\r\n        render: formateDate,\r\n        // render: (create_time) => formateDate(create_time),\r\n      },\r\n      {\r\n        title: \"Auth_Time\",\r\n        // title: \"授权时间\",\r\n        dataIndex: \"auth_time\",\r\n        render: formateDate,\r\n      },\r\n      {\r\n        title: \"Auth_Name\",\r\n        // title: \"授权人\",\r\n        dataIndex: \"auth_name\",\r\n      },\r\n      {\r\n        title: \"Operation\",\r\n        // title: \"操作\",\r\n        render: (role) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.deleteRole(role)}>delete</LinkButton>\r\n            {/* <LinkButton onClick={() => this.deleteRole(role)}>删除</LinkButton> */}\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  };\r\n\r\n  /*\r\n  删除指定role\r\n   */\r\n  deleteRole = (role) => {\r\n    Modal.confirm({\r\n      title: `confirm to delete ${role.name}?`,\r\n      // title: `确认删除${role.name}吗?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteRole(role._id);\r\n        if (result.status === 0) {\r\n          message.success(\"Delete role successfully!\");\r\n          // message.success(\"删除角色成功!\");\r\n          this.getRoles();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  getRoles = async () => {\r\n    const result = await reqRoles();\r\n    if (result.status === 0) {\r\n      const roles = result.data;\r\n      this.setState({\r\n        roles,\r\n      });\r\n    }\r\n  };\r\n\r\n  onRow = (role) => {\r\n    return {\r\n      onClick: (event) => {\r\n        // 点击行\r\n        // console.log(\"row onClick()\", role);\r\n        // alert('点击行')\r\n        this.setState({\r\n          role,\r\n        });\r\n      },\r\n    };\r\n  };\r\n\r\n  /*\r\n  添加角色\r\n   */\r\n  addRole = () => {\r\n    // 进行表单验证, 只能通过了才向下处理\r\n    this.form.validateFields(async (error, values) => {\r\n      if (!error) {\r\n        // 隐藏确认框\r\n        this.setState({\r\n          isShowAdd: false,\r\n        });\r\n\r\n        // 收集输入数据\r\n        const { roleName } = values;\r\n        this.form.resetFields();\r\n\r\n        // 请求添加\r\n        const result = await reqAddRole(roleName);\r\n        // 根据结果提示/更新列表显示\r\n        if (result.status === 0) {\r\n          message.success(\"Add role successfully\");\r\n          // message.success(\"添加角色成功\");\r\n          // this.getRoles()\r\n          // 新产生的角色\r\n          const role = result.data;\r\n          // 更新roles状态\r\n          /*const roles = this.state.roles\r\n          roles.push(role)\r\n          this.setState({\r\n            roles\r\n          })*/\r\n\r\n          // 更新roles状态: 基于原本状态数据更新\r\n          this.setState({\r\n            roles: [...this.state.roles, role],\r\n          });\r\n          // this.setState((state) => ({\r\n          //   roles: [...state.roles, role],\r\n          // }));\r\n          console.log(\"set roles\");\r\n        } else {\r\n          message.success(\"Add role failed\");\r\n          // message.success(\"添加角色失败\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  /*\r\n  更新角色\r\n   */\r\n  updateRole = async () => {\r\n    // 隐藏确认框\r\n    this.setState({\r\n      isShowAuth: false,\r\n    });\r\n\r\n    const role = this.state.role;\r\n    // 得到最新的menus\r\n    const menus = this.auth.current.getMenus();\r\n    role.menus = menus;\r\n    role.auth_time = Date.now();\r\n    role.auth_name = memoryUtils.user.username;\r\n\r\n    // 请求更新\r\n    const result = await reqUpdateRole(role);\r\n    if (result.status === 0) {\r\n      // this.getRoles()\r\n      // 如果当前更新的是自己角色的权限, 强制退出\r\n      if (role._id === memoryUtils.user.role_id) {\r\n        memoryUtils.user = {};\r\n        storageUtils.removeUser();\r\n        this.props.history.replace(\"/login\");\r\n        message.success(\"Please logout and set role\");\r\n        // message.success(\"当前用户角色权限成功\");\r\n      } else {\r\n        message.success(\"Set role successfully\");\r\n        // message.success(\"设置角色权限成功\");\r\n        this.setState({\r\n          roles: [...this.state.roles],\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.initColumn();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRoles();\r\n  }\r\n\r\n  render() {\r\n    const { roles, role, isShowAdd, isShowAuth } = this.state;\r\n\r\n    const title = (\r\n      <span>\r\n        <Button type=\"primary\" onClick={() => this.setState({ isShowAdd: true })}>\r\n          {/* 创建角色 */}Create Role\r\n        </Button>{\" \"}\r\n        &nbsp;&nbsp;\r\n        <Button type=\"primary\" disabled={!role._id} onClick={() => this.setState({ isShowAuth: true })}>\r\n          {/* 设置角色权限 */}Role Settings\r\n        </Button>\r\n      </span>\r\n    );\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table\r\n          bordered\r\n          rowKey=\"_id\"\r\n          dataSource={roles}\r\n          columns={this.columns}\r\n          pagination={{ defaultPageSize: PAGE_SIZE }}\r\n          rowSelection={{\r\n            type: \"radio\",\r\n            selectedRowKeys: [role._id],\r\n            onSelect: (role) => {\r\n              // 选择某个radio时回调\r\n              this.setState({\r\n                role,\r\n              });\r\n            },\r\n          }}\r\n          onRow={this.onRow}\r\n        />\r\n\r\n        <Modal\r\n          title=\"Add Role\"\r\n          // title=\"添加角色\"\r\n          visible={isShowAdd}\r\n          onOk={this.addRole}\r\n          onCancel={() => {\r\n            this.setState({ isShowAdd: false });\r\n            this.form.resetFields();\r\n          }}>\r\n          <AddForm setForm={(form) => (this.form = form)} />\r\n        </Modal>\r\n\r\n        <Modal\r\n          title=\"Role Permission Settings\"\r\n          // title=\"设置角色权限\"\r\n          visible={isShowAuth}\r\n          onOk={this.updateRole}\r\n          onCancel={() => {\r\n            this.setState({ isShowAuth: false });\r\n          }}>\r\n          <AuthForm ref={this.auth} role={role} />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Select, Input } from \"antd\";\r\n\r\nconst Item = Form.Item;\r\nconst Option = Select.Option;\r\n\r\n/*\r\n添加/修改用户的form组件\r\n */\r\nclass UserForm extends PureComponent {\r\n  static propTypes = {\r\n    setForm: PropTypes.func.isRequired, // 用来传递form对象的函数\r\n    roles: PropTypes.array.isRequired,\r\n    user: PropTypes.object,\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.props.setForm(this.props.form);\r\n  }\r\n\r\n  render() {\r\n    const { roles, user } = this.props;\r\n    const { getFieldDecorator } = this.props.form;\r\n    // 指定Item布局的配置对象\r\n    const formItemLayout = {\r\n      labelCol: { span: 4 }, // 左侧label的宽度\r\n      wrapperCol: { span: 15 }, // 右侧包裹的宽度\r\n    };\r\n\r\n    return (\r\n      <Form {...formItemLayout}>\r\n        <Item label=\"Name\">\r\n          {/* <Item label=\"用户名\"> */}\r\n          {getFieldDecorator(\"username\", {\r\n            initialValue: user.username,\r\n          })(<Input placeholder=\"Please enter name\" />)}\r\n        </Item>\r\n\r\n        {user._id ? null : (\r\n          <Item label=\"Password\">\r\n            {/* <Item label=\"密码\"> */}\r\n            {getFieldDecorator(\"password\", {\r\n              initialValue: user.password,\r\n            })(<Input type=\"password\" placeholder=\"Please enter password\" />)}\r\n          </Item>\r\n        )}\r\n\r\n        <Item label=\"Mobile\">\r\n          {/* <Item label=\"手机号\"> */}\r\n          {getFieldDecorator(\"phone\", {\r\n            initialValue: user.phone,\r\n          })(<Input placeholder=\"Please enter mobile\" />)}\r\n        </Item>\r\n        <Item label=\"Email\">\r\n          {/* <Item label=\"邮箱\"> */}\r\n          {getFieldDecorator(\"email\", {\r\n            initialValue: user.email,\r\n          })(<Input placeholder=\"Please enter email\" />)}\r\n        </Item>\r\n\r\n        <Item label=\"Role\">\r\n          {/* <Item label=\"角色\"> */}\r\n          {getFieldDecorator(\"role_id\", {\r\n            initialValue: user.role_id,\r\n          })(\r\n            <Select>\r\n              {roles.map((role) => (\r\n                <Option key={role._id} value={role._id}>\r\n                  {role.name}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(UserForm);\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button, Table, Modal, message } from \"antd\";\r\nimport { formateDate } from \"../../utils/dateUtils\";\r\nimport LinkButton from \"../../components/link-button/index\";\r\nimport { reqDeleteUser, reqUsers, reqAddOrUpdateUser } from \"../../api/index\";\r\nimport UserForm from \"./user-form\";\r\n\r\n/*\r\n用户路由\r\n */\r\nexport default class User extends Component {\r\n  state = {\r\n    users: [], // 所有用户列表\r\n    roles: [], // 所有角色列表\r\n    isShow: false, // 是否显示确认框\r\n  };\r\n\r\n  initColumns = () => {\r\n    this.columns = [\r\n      {\r\n        title: \"Name\",\r\n        // title: \"用户名\",\r\n        dataIndex: \"username\",\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        // title: \"邮箱\",\r\n        dataIndex: \"email\",\r\n      },\r\n\r\n      {\r\n        title: \"Mobile\",\r\n        // title: \"电话\",\r\n        dataIndex: \"phone\",\r\n      },\r\n      {\r\n        title: \"Registered Time\",\r\n        // title: \"注册时间\",\r\n        dataIndex: \"create_time\",\r\n        render: formateDate,\r\n      },\r\n      {\r\n        title: \"Role\",\r\n        // title: \"所属角色\",\r\n        dataIndex: \"role_id\",\r\n        render: (role_id) => this.roleNames[role_id],\r\n        // render: (role_id) => this.state.roles.find((role) => role._id === role_id).name,\r\n      },\r\n      {\r\n        title: \"Operation\",\r\n        // title: \"操作\",\r\n        render: (user) => (\r\n          <span>\r\n            <LinkButton onClick={() => this.showUpdate(user)}>Modify</LinkButton>\r\n            <LinkButton onClick={() => this.deleteUser(user)}>Delete</LinkButton>\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  };\r\n\r\n  /*\r\n  根据role的数组, 生成包含所有角色名的对象(属性名用角色id值)\r\n   */\r\n  initRoleNames = (roles) => {\r\n    const roleNames = roles.reduce((pre, role) => {\r\n      pre[role._id] = role.name;\r\n      return pre;\r\n    }, {});\r\n    // 保存\r\n    this.roleNames = roleNames;\r\n  };\r\n\r\n  /*\r\n  显示添加界面\r\n   */\r\n  showAdd = () => {\r\n    this.user = null; // 去除前面保存的user\r\n    this.setState({ isShow: true });\r\n  };\r\n\r\n  /*\r\n  显示修改界面\r\n   */\r\n  showUpdate = (user) => {\r\n    this.user = user; // 保存user\r\n    this.setState({\r\n      isShow: true,\r\n    });\r\n  };\r\n\r\n  /*\r\n  删除指定用户\r\n   */\r\n  deleteUser = (user) => {\r\n    Modal.confirm({\r\n      title: `Confirm to delete ${user.username}?`,\r\n      // title: `确认删除${user.username}吗?`,\r\n      onOk: async () => {\r\n        const result = await reqDeleteUser(user._id);\r\n        if (result.status === 0) {\r\n          message.success(\"Delete user successfully!\");\r\n          // message.success(\"删除用户成功!\");\r\n          console.log(\"delete\", this);\r\n          this.getUsers();\r\n        }\r\n      },\r\n    });\r\n  };\r\n\r\n  /*\r\n  添加/更新用户\r\n   */\r\n  addOrUpdateUser = async () => {\r\n    this.setState({ isShow: false });\r\n\r\n    // 1. 收集输入数据\r\n    const user = this.form.getFieldsValue();\r\n    this.form.resetFields();\r\n    // 如果是更新, 需要给user指定_id属性\r\n    if (this.user) {\r\n      user._id = this.user._id;\r\n    }\r\n\r\n    // 2. 提交添加的请求\r\n    const result = await reqAddOrUpdateUser(user);\r\n    // 3. 更新列表显示\r\n    if (result.status === 0) {\r\n      message.success(`${this.user ? \"Modify\" : \"Add\"} user successfully`);\r\n      // message.success(`${this.user ? \"修改\" : \"添加\"}用户成功`);\r\n      this.getUsers();\r\n    }\r\n  };\r\n\r\n  getUsers = async () => {\r\n    const result = await reqUsers();\r\n    if (result.status === 0) {\r\n      const { users, roles } = result.data;\r\n      this.initRoleNames(roles);\r\n      this.setState({\r\n        users,\r\n        roles,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentWillMount() {\r\n    this.initColumns();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getUsers();\r\n  }\r\n\r\n  render() {\r\n    const { users, roles, isShow } = this.state;\r\n    const user = this.user || {};\r\n\r\n    const title = (\r\n      <Button type=\"primary\" onClick={this.showAdd}>\r\n        Create User\r\n        {/* 创建用户 */}\r\n      </Button>\r\n    );\r\n\r\n    return (\r\n      <Card title={title}>\r\n        <Table bordered rowKey=\"_id\" dataSource={users} columns={this.columns} pagination={{ defaultPageSize: 2 }} />\r\n\r\n        <Modal\r\n          title={user._id ? \"Modify User\" : \"Add User\"}\r\n          // title={user._id ? \"修改用户\" : \"添加用户\"}\r\n          visible={isShow}\r\n          onOk={this.addOrUpdateUser}\r\n          onCancel={() => {\r\n            this.form.resetFields();\r\n            this.setState({ isShow: false });\r\n          }}>\r\n          <UserForm setForm={(form) => (this.form = form)} roles={roles} user={user} />\r\n        </Modal>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Card, Button } from \"antd\";\r\nimport ReactEcharts from \"echarts-for-react\";\r\n\r\n/*\r\n后台管理的柱状图路由组件\r\n */\r\nexport default class Bar extends Component {\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  };\r\n\r\n  update = () => {\r\n    this.setState((state) => ({\r\n      sales: state.sales.map((sale) => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store - 1);\r\n        return pre;\r\n      }, []),\r\n    }));\r\n  };\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: \"ECharts 入门示例\",\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data: [\"销量\", \"库存\"],\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\", \"羊毛衫\", \"雪纺衫\", \"裤子\", \"高跟鞋\", \"袜子\"],\r\n      },\r\n      yAxis: {},\r\n      series: [\r\n        {\r\n          name: \"销量\",\r\n          type: \"bar\",\r\n          data: sales,\r\n        },\r\n        {\r\n          name: \"库存\",\r\n          type: \"bar\",\r\n          data: stores,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { sales, stores } = this.state;\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type=\"primary\" onClick={this.update}>\r\n            更新\r\n          </Button>\r\n        </Card>\r\n\r\n        <Card title=\"柱状图一\">\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react'\r\nimport {Card, Button} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的折线图路由组件\r\n */\r\nexport default class Line extends Component {\r\n\r\n  state = {\r\n    sales: [5, 20, 36, 10, 10, 20], // 销量的数组\r\n    stores: [6, 10, 25, 20, 15, 10], // 库存的数组\r\n  }\r\n\r\n  update = () => {\r\n    this.setState(state => ({\r\n      sales: state.sales.map(sale => sale + 1),\r\n      stores: state.stores.reduce((pre, store) => {\r\n        pre.push(store-1)\r\n        return pre\r\n      }, []),\r\n    }))\r\n  }\r\n\r\n  /*\r\n  返回柱状图的配置对象\r\n   */\r\n  getOption = (sales, stores) => {\r\n    return {\r\n      title: {\r\n        text: 'ECharts 入门示例'\r\n      },\r\n      tooltip: {},\r\n      legend: {\r\n        data:['销量', '库存']\r\n      },\r\n      xAxis: {\r\n        data: [\"衬衫\",\"羊毛衫\",\"雪纺衫\",\"裤子\",\"高跟鞋\",\"袜子\"]\r\n      },\r\n      yAxis: {},\r\n      series: [{\r\n        name: '销量',\r\n        type: 'line',\r\n        data: sales\r\n      }, {\r\n        name: '库存',\r\n        type: 'line',\r\n        data: stores\r\n      }]\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {sales, stores} = this.state\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <Button type='primary' onClick={this.update}>更新</Button>\r\n        </Card>\r\n\r\n        <Card title='折线图一'>\r\n          <ReactEcharts option={this.getOption(sales, stores)} />\r\n        </Card>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}","import React, {Component} from 'react'\r\nimport {Card} from 'antd'\r\nimport ReactEcharts from 'echarts-for-react'\r\n\r\n/*\r\n后台管理的饼图路由组件\r\n */\r\nexport default class Pie extends Component {\r\n\r\n  getOption = () => {\r\n    return {\r\n      title : {\r\n        text: '某站点用户访问来源',\r\n        subtext: '纯属虚构',\r\n        x:'center'\r\n      },\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n      legend: {\r\n        orient: 'vertical',\r\n        left: 'left',\r\n        data: ['直接访问','邮件营销','联盟广告','视频广告','搜索引擎']\r\n      },\r\n      series : [\r\n        {\r\n          name: '访问来源',\r\n          type: 'pie',\r\n          radius : '55%',\r\n          center: ['50%', '60%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:234, name:'联盟广告'},\r\n            {value:135, name:'视频广告'},\r\n            {value:1548, name:'搜索引擎'}\r\n          ],\r\n          itemStyle: {\r\n            emphasis: {\r\n              shadowBlur: 10,\r\n              shadowOffsetX: 0,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    };\r\n\r\n  }\r\n\r\n  getOption2 = () => {\r\n    return {\r\n      backgroundColor: '#2c343c',\r\n\r\n      title: {\r\n        text: 'Customized Pie',\r\n        left: 'center',\r\n        top: 20,\r\n        textStyle: {\r\n          color: '#ccc'\r\n        }\r\n      },\r\n\r\n      tooltip : {\r\n        trigger: 'item',\r\n        formatter: \"{a} <br/>{b} : {c} ({d}%)\"\r\n      },\r\n\r\n      visualMap: {\r\n        show: false,\r\n        min: 80,\r\n        max: 600,\r\n        inRange: {\r\n          colorLightness: [0, 1]\r\n        }\r\n      },\r\n      series : [\r\n        {\r\n          name:'访问来源',\r\n          type:'pie',\r\n          radius : '55%',\r\n          center: ['50%', '50%'],\r\n          data:[\r\n            {value:335, name:'直接访问'},\r\n            {value:310, name:'邮件营销'},\r\n            {value:274, name:'联盟广告'},\r\n            {value:235, name:'视频广告'},\r\n            {value:400, name:'搜索引擎'}\r\n          ].sort(function (a, b) { return a.value - b.value; }),\r\n          roseType: 'radius',\r\n          label: {\r\n            normal: {\r\n              textStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              }\r\n            }\r\n          },\r\n          labelLine: {\r\n            normal: {\r\n              lineStyle: {\r\n                color: 'rgba(255, 255, 255, 0.3)'\r\n              },\r\n              smooth: 0.2,\r\n              length: 10,\r\n              length2: 20\r\n            }\r\n          },\r\n          itemStyle: {\r\n            normal: {\r\n              color: '#c23531',\r\n              shadowBlur: 200,\r\n              shadowColor: 'rgba(0, 0, 0, 0.5)'\r\n            }\r\n          },\r\n\r\n          animationType: 'scale',\r\n          animationEasing: 'elasticOut',\r\n          animationDelay: function (idx) {\r\n            return Math.random() * 200;\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card title='饼图一'>\r\n          <ReactEcharts option={this.getOption()} style={{height: 300}}/>\r\n        </Card>\r\n        <Card title='饼图二'>\r\n          <ReactEcharts option={this.getOption2()} style={{height: 300}}/>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Button, Row, Col } from \"antd\";\r\nimport \"./not-found.less\";\r\n/*\r\n前台404页面\r\n */\r\nexport default class NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <Row className=\"not-found\">\r\n        <Col span={12} className=\"left\"></Col>\r\n        <Col span={12} className=\"right\">\r\n          <h1>404</h1>\r\n          <h2>Sorry, this page does not exist</h2>\r\n          {/* <h2>抱歉，你访问的页面不存在</h2> */}\r\n          <div>\r\n            <Button type=\"primary\" onClick={() => this.props.history.replace(\"/home\")}>\r\n              Return Home\r\n              {/* 回到首页 */}\r\n            </Button>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { Layout } from \"antd\";\r\nimport memoryUtils from \"../../utils/memoryUtils\";\r\nimport LeftNav from \"../../components/left-nav\";\r\nimport Header from \"../../components/header\";\r\nimport Home from \"../home/home\";\r\nimport Category from \"../category/category\";\r\nimport Product from \"../product/product\";\r\nimport Role from \"../role/role\";\r\nimport User from \"../user/user.js\";\r\nimport Bar from \"../charts/bar\";\r\nimport Line from \"../charts/line\";\r\nimport Pie from \"../charts/pie\";\r\nimport NotFound from \"../not-found/not-found\";\r\nimport storageUtils from \"../../utils/storageUtils\";\r\n\r\nconst { Footer, Sider, Content } = Layout;\r\nexport default class Admin extends Component {\r\n  render() {\r\n    const user = memoryUtils.user;\r\n    console.log(\"admin\", user, user._id);\r\n    if (!user || !user._id) {\r\n      return <Redirect to=\"/login\"></Redirect>;\r\n      // console.log(this.props.history.replace(\"/login\"));\r\n    }\r\n    return (\r\n      <Layout style={{ minHeight: \"100%\" }}>\r\n        <Sider>\r\n          <LeftNav />\r\n        </Sider>\r\n        <Layout>\r\n          <Header>Header</Header>\r\n          <Content style={{ margin: \"20px\", backgroundColor: \"#fff\" }}>\r\n            <Switch>\r\n              <Redirect from=\"/\" exact to=\"/home\" />\r\n              <Route path=\"/home\" component={Home} />\r\n              <Route path=\"/category\" component={Category} />\r\n              <Route path=\"/product\" component={Product} />\r\n              <Route path=\"/user\" component={User} />\r\n              <Route path=\"/role\" component={Role} />\r\n              <Route path=\"/charts/bar\" component={Bar} />\r\n              <Route path=\"/charts/pie\" component={Pie} />\r\n              <Route path=\"/charts/line\" component={Line} />\r\n              <Route component={NotFound}></Route>\r\n            </Switch>\r\n          </Content>\r\n          <Footer style={{ textAlign: \"center\", color: \"#cccccc\" }}>Google Chrome is recommended for better page operation experience</Footer>\r\n        </Layout>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Login from \"./pages/login/Login\";\r\nimport Admin from \"./pages/admin/Admin\";\r\n\r\nexport default class App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/login\" component={Login}></Route>\r\n          <Route path=\"/\" component={Admin}></Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n// import store from \"./redxu/store\";\r\n\r\nimport App from \"./App\";\r\n\r\nimport storageUtils from \"./utils/storageUtils\";\r\nimport memoryUtils from \"./utils/memoryUtils\";\r\n\r\n// 读取local中保存user, 保存到内存中\r\nconst user = storageUtils.getUser();\r\nmemoryUtils.user = user;\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ba1f87ec.png\";"],"sourceRoot":""}